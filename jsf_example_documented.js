/* 
Idea & Documentation: https://github.com/aemkei/jsfuck
This program prints the string 42 to the console 
In pure JS the following code is executed:  
    []["fill"]["constructor"](return console)()["log"]("42")


 Subtask 1 :
    create a Function constructor to evaluate code: []["fill"]["constructor"](return console)(), use 
*/ 
[] 
    [ 
    // subtask 1.1. create string "fill"
    // ![]+[] creates the string false,then access the 0th element to get a f             
    [![]+[]][+![]][+![]]
    // i ([][[]]+[]) creates the string undefined,then access the 5th element to get an i 
    +([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]
    // ![]+[] creates the string false,then access the second element to get a l 
    +(![]+[])[++[+!![]][+![]]]
    // l 
    +(![]+[])[++[+!![]][+![]]] ]
[
    // subtask 1.2: create string "constructor"
    // c 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+ 
    // o 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+ 
    //n 
    ([][[]]+[]) [ +!![] ]+ 
    // s 
    (![]+[])[++[++[+!![]][+![]]][+![]]]+
    // t e.g. [true][0][0]
    [!![]+[]][+![]][+![]]+
    // r e.g. [true][0][1]
    [!![]+[]][+![]][+!![]]+
    // u e.g. true[0][2] where true+true = 2 
    [!![]+[]][+![]][!+[]+!+[]]+
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+ // c
    [!![]+[]][+![]][+![]]+ //t
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+ // o
    // r e.g. [true][0][1]
    [!![]+[]][+![]][+!![]]
](
    // r
    [!![]+[]][+![]][+!![]]+
    // e
    [[][[]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+
    // t 
    [!![]+[]][+![]][+![]]+
    // u 
    [!![]+[]][+![]][!+[]+!+[]]+
    // r 
    [!![]+[]][+![]][+!![]]+
    // n 
    ([][[]]+[])[+!![]]  + 
    //  create " "
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][(!![]+!![])+(!![]+!![])+(!![]+!![])+(!![]+!![])] +
    // (!![]+!![])+(!![]+!![])+(!![]+!![])+(!![]+!![]) = 8
    // Subtask: create string console  
    //['function fill() { [native code] }][0][3] creates a c 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+
    //['function fill() { [native code] }][0][5] creates an o 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+
    // "undefined"[2] creates a n, side note  +[] converts value undefined to string "undefined"
    ([][[]]+[]) [ +!![] ]+
    // "false"[3] creates a s, side note instead of "false"[3] [false][0][3] could be used but isnt to short up code 
    (![]+[])[++[++[+!![]][+![]]][+![]]]+
    //['function fill() { [native code] }][0][5] creates an o 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+
    // "false"[2] creates a l, side note instead of "false"[3] [false][0][3] could be used but isnt to short up code 
    (![]+[])[++[+!![]][+![]]]+
    // ["undefined"][0][3] creates an e 
    [[][[]]+[]][+![]][++[++[+!![]][+![]]][+![]]]
)()

    [
    // subtask create the string log 
    // create a l 
    (![]+[])[++[+!![]][+![]]]+
    // creates an o 
    [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+
    // [([]+[])["constructor"]+[]][0][14] creates a g where ([]+[]) creates an empty string 
    [([]+[])[
        // c 
        [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+ 
        // o 
        [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+ 
        //n 
        ([][[]]+[]) [ +!![] ]+ 
        // s 
        (![]+[])[++[++[+!![]][+![]]][+![]]]+
        // t e.g. [true][0][0]
        [!![]+[]][+![]][+![]]+
        // r e.g. [true][0][1]
        [!![]+[]][+![]][+!![]]+
        // u e.g. true[0][2] where true+true = 2 
        [!![]+[]][+![]][!+[]+!+[]]+
        [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[+!![]][+![]]][+![]]]+ // c
        [!![]+[]][+![]][+![]]+ //t
        [[][ [![]+[]][+![]][+![]]+([][[]]+[])[ +!![]+!![]+!![]+!![]+!![]]+(![]+[])[+!![]+!![]]+(![]+[])[+!![]+!![]]]+[]][+![]][++[++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]]][+![]]]+ // o
        // r e.g. [true][0][1]
        [!![]+[]][+![]][+!![]]
        ]
        // access first element from array [ 'function String() { [native code] }' ] and then the 14th letter e.g. a g 
        +[]][+![]] //0 
            //  5+5+3+1=14
            [++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]] + ++[++[++[++[+!![]][+![]]][+![]]][+![]]][+![]] + ++[++[+!![]][+![]]][+![]]+ +!![]] 
    ]((!![]+!![])+(!![]+!![])+[]+(!![]+!![]))
